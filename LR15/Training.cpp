#include <stdio.h>
#include <string.h>
/*
int main() {
	//char ch;

	//ch = getchar(); // Возвращает код введёного в stdin символа
	//putchar(ch); // Выводит на stdout символ по его коду

	//ch = getc(stdin); // Тоже самое, что и getchar(), но с указанием конкретного потока, откуда берётся вводимый символ
	//putc(ch, stdout); // Тоже самое, что и putchar(), но с указанием конкретного потока, куда выводится символ

	//scanf_s("%c", &ch); // Форматный ввод символа через спецификатор
	//printf("%c", ch); // Форматный вывод символа через спецификатор


	//char string[50];
	
	//scanf_s("%s", &string, 51); // Форматный ввод строки через спецификатор, с указанием размера буфера (не считывает символы после пробела)
	// При этом размер буфера можно брать любого размера, но нужно помнить, что:
	// 1. Если размер буфера равен или меньше размера массива, то ввод большего или равного размеру буфера ничего не даст.
	// 2. Если размер буфера больше размера массива, то программа выдаст ошибку.

	//printf("%s", string); // Форматный вывод строки через спецификатор

	//gets_s(string, 49); // Считывает строку с пробелами, концом ввода является \n, и, который перезаписывается \0 
	//puts(string); // Выводит строку на экран с переносом на следующую строку

	
	// Пример того, что массив символов без \0 в конце не является строкой
	//char str[5]; 
	//str[0] = 'a';
	//str[2] = 'b';
	//puts(str);

	//char str[10];
	//fgets(str, 10, stdin); // Считывает в строку заданное количество символов из заданного потока
	//puts(str);

	//fgets(str, 10, stdin);
	//fputs(str, stdout); // Тоже, что и puts, но с указанием потока вывода


	//char string[50] = "Hello word!";

	//fgets(string, 50, stdin);
	//printf("%zu", strlen(string)); // strlen - возвращает длинку строки

	//char string2[] = "Hello word";
	//strcpy_s(string, string2); // Копирует строку string2 в строку string (размер string должен быть больше или равен string2) 
	//printf("%s", string);

	//strcat_s(string, string2); // Присоединяет строку string2 к строке string, причем string не должна быть нулевой и её размер должен быть больше string2
	//printf("%s", string);

	//int result = strcmp(string, string2); // Сравнивает строку string со строкой string2 по алфавиту 
	// Результат: -1 – первая строка меньше второй; 
	// 1 – первая строка больше второй; 
	// 0 – строки равны
	//printf("%d", result);

	//char* result = strstr(string, string2); // Ищет первое вхождение подстроки string2 в строке string1. 
	//Возвращает указатель на первое вхождение строки string2 в строку string1, или пустой указатель, если строка string2 не является частью строки
	//printf("%s", result);

	//char* result = strchr(string, 'w'); // Ищет первое вхождение символа symbol в строку string. Возвращает указатель на первое вхождение символа в строке или пустой указатель, если символ не найден в строке
	//printf("%s", result);

	//_strupr_s(string); // Делает все буквы строки string заглавными
	//printf("%s", string);

	//_strlwr_s(string); // Делает все буквы строки s строчными
	//printf("%s", string);

	return 0;
}
*/